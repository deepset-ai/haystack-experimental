openapi: 3.0.0
info:
  title: Greeting Service
  version: 1.0.0
servers:
  - url: http://localhost # not used anyway
paths:
  /greet/{name}:
    post:
      operationId: greet
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageBody'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GreetingResponse'

  /greet-params/{name}:
    get:
      operationId: greetParams
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GreetingResponse'

  /greet-body:
    post:
      operationId: greetBody
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GreetBody'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GreetingResponse'

  /greet-api-key/{name}:
    get:
      operationId: greetApiKey
      security:
        - ApiKeyAuth: []
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GreetingResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /greet-basic-auth/{name}:
    get:
      operationId: greetBasicAuth
      security:
        - BasicAuth: []
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GreetingResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /greet-api-key-query/{name}:
    get:
      operationId: greetApiKeyQuery
      security:
        - ApiKeyAuthQuery: [ ]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GreetingResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /greet-api-key-cookie/{name}:
    get:
      operationId: greetApiKeyCookie
      security:
        - ApiKeyAuthCookie: [ ]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GreetingResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /greet-bearer-auth/{name}:
    get:
      operationId: greetBearerAuth
      security:
        - BearerAuth: [ ]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GreetingResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /greet-oauth/{name}:
    get:
      operationId: greetOAuth
      security:
        - OAuth2: [ ]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GreetingResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    BasicAuth:
      type: http
      scheme: basic
    ApiKeyAuthQuery:
      type: apiKey
      in: query
      name: api_key
    ApiKeyAuthCookie:
      type: apiKey
      in: cookie
      name: api_key
    BearerAuth:
      type: http
      scheme: bearer
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            read:greet: Read access to greeting service

  schemas:
    GreetBody:
      type: object
      properties:
        message:
          type: string
        name:
          type: string
      required:
        - message
        - name

    MessageBody:
      type: object
      properties:
        message:
          type: string
      required:
        - message

    GreetingResponse:
      type: object
      properties:
        greeting:
          type: string

    ErrorResponse:
      type: object
      properties:
        detail:
          type: string